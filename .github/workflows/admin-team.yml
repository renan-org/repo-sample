name: Admin Team Management
on:
  issues:
    types: [opened, reopened]

jobs:
  manage-admin-team:
    if: contains(github.event.issue.labels.*.name, 'admin-request')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout current repository (for Issue template)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: current-repo

      - name: Init gh cli
        run: gh auth login --with-token <<< ${{ secrets.SUPER_TOKEN }}
        
      - name: Post workflow run on Issue
        run: |
          cd current-repo
          gh issue comment ${{ github.event.issue.number }} --body "This issue is being processed by the Admin Team Management workflow. Please wait for the results."

      - name: Checkout .github repository (for admin-team.yml)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUPER_TOKEN }}
          repository: ${{ github.repository_owner }}/.github
          path: github-repo

      - name: Parse issue body
        id: parse
        uses: stefanbuck/github-issue-parser@v3
        with:
          template-path: current-repo/.github/ISSUE_TEMPLATE/admin-request.yml
          issue-body: "${{ github.event.issue.body }}"
      - name: Save parsed output to file
        id: gather-issue-inputs
        run: echo '${{ steps.parse.outputs.jsonString }}' > migrate_output.json
      - name: Export parsed values as environment variables
        run: |
          echo "HANDLE=$(jq -r '.github_handle' migrate_output.json)" >> $GITHUB_ENV
          echo "ACTION=$(jq -r '.action_type' migrate_output.json)" >> $GITHUB_ENV
          echo "JUSTIFICATION=$(jq -r '.justification' migrate_output.json)" >> $GITHUB_ENV
      - name: Show parsed data
        run: |
          echo "GitHub Handle: ${{ env.HANDLE }}"
          echo "Action: ${{ env.ACTION }}"
          echo "Justification: ${{ env.JUSTIFICATION }}"

      - name: Ensure user exists in organization
        run: gh api orgs/renan-org/members/${{ env.HANDLE }} --silent && echo "✅ User is a member" || (echo "❌ User is NOT a member" && exit 1)
        
      - name: Ensure admin-team.yml exists
        run: |
          if gh api repos/renan-org/.github/contents/admin-team.yml --silent; then
            echo "✅ File exists."
          else
            echo "❌ File does not exist. Failing workflow."
            exit 1
          fi
          
      - name: Check if user is in admin-team.yml
        shell: bash {0}
        id: user-in-team
        run: |
          cd github-repo
          ls -la
          grep '@${{ env.HANDLE }}' admin-team.yml >> /dev/null
          if [ $? -eq 0 ]; then
            echo "@${{ env.HANDLE }} is in the admin team list."
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "@${{ env.HANDLE }} is NOT in the admin team list."
            echo "result=false" >> $GITHUB_OUTPUT
          fi

      - name: Add user to admin team
        id: add-user
        if: ${{ env.ACTION == 'add' && steps.user-in-team.outputs.result == 'false' }}
        run: |
          cd github-repo
          ls -la
          echo "Adding @${{ env.HANDLE }} to admin team..."
          sed -i "/^team_admins:/a \ \ - @${{ env.HANDLE }}" "admin-team.yml"
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git checkout -b add-admin-${{ env.HANDLE }}-${{ github.run_id }}
          git add admin-team.yml
          git commit -m "Add @${{ env.HANDLE }} to admin team"
          git push origin add-admin-${{ env.HANDLE }}-${{ github.run_id }}
          PR_URL=$(gh pr create --title "Add @${{ env.HANDLE }} to admin team" --body "This PR adds @${{ env.HANDLE }} to the admin team." --base main --head add-admin-${{ env.HANDLE }}-${{ github.run_id }})
          echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT

      - name: Comment on original issue (add)
        if: ${{ env.ACTION == 'add' && steps.user-in-team.outputs.result == 'false' }}
        run: |
          cd current-repo
          gh issue comment ${{ github.event.issue.number }} --body "✅ User @${{ env.HANDLE }} will be added to the admin team via PR: ${{ steps.add-user.outputs.pr_url }}"

      - name: Remove user from admin team
        id: remove-user
        if: ${{ env.ACTION == 'remove' && steps.user-in-team.outputs.result == 'true' }}
        run: |
          cd github-repo
          ls -la
          echo "Removing @${{ env.HANDLE }} from admin team..."
          sed -i "/^\s*-\s*@${{ env.HANDLE }}/d" "admin-team.yml"
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git checkout -b remove-admin-${{ env.HANDLE }}-${{ github.run_id }}
          git add admin-team.yml
          git commit -m "Remove @${{ env.HANDLE }} from admin team"
          git push origin remove-admin-${{ env.HANDLE }}-${{ github.run_id }}
          PR_URL=$(gh pr create --title "Remove @${{ env.HANDLE }} from admin team" --body "This PR removes @${{ env.HANDLE }} from the admin team." --base main --head remove-admin-${{ env.HANDLE }}-${{ github.run_id }})
          echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT

      - name: Comment on original issue (remove)
        if: ${{ env.ACTION == 'remove' && steps.user-in-team.outputs.result == 'true' }}
        run: |
          cd current-repo
          gh issue comment ${{ github.event.issue.number }} --body "✅ User @${{ env.HANDLE }} can be removed from the admin team via PR: ${{ steps.remove-user.outputs.pr_url }}"

      - name: Handle user already in team
        if: ${{ env.ACTION == 'add' && steps.user-in-team.outputs.result == 'true' }}
        run: |
          cd current-repo
          gh issue comment ${{ github.event.issue.number }} --body "ℹ️ User @${{ env.HANDLE }} is already in the admin team."

      - name: Handle user not in team
        if: ${{ env.ACTION == 'remove' && steps.user-in-team.outputs.result == 'false' }}
        run: |
          cd current-repo
          gh issue comment ${{ github.event.issue.number }} --body "ℹ️ User @${{ env.HANDLE }} is not in the admin team."
